{"ast":null,"code":"var closest = require('./closest');\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\n\n\nfunction delegate(element, selector, type, callback, useCapture) {\n  var listenerFn = listener.apply(this, arguments);\n  element.addEventListener(type, listenerFn, useCapture);\n  return {\n    destroy: function () {\n      element.removeEventListener(type, listenerFn, useCapture);\n    }\n  };\n}\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\n\n\nfunction listener(element, selector, type, callback) {\n  return function (e) {\n    e.delegateTarget = closest(e.target, selector);\n\n    if (e.delegateTarget) {\n      callback.call(element, e);\n    }\n  };\n}\n\nmodule.exports = delegate;","map":{"version":3,"sources":["/home/wan/Dropbox/Projects/react_proj_chat_app/client/node_modules/delegate/src/delegate.js"],"names":["closest","require","delegate","element","selector","type","callback","useCapture","listenerFn","listener","apply","arguments","addEventListener","destroy","removeEventListener","e","delegateTarget","target","call","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;AAEA;;;;;;;;;;;;AAUA,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,QAA3B,EAAqCC,IAArC,EAA2CC,QAA3C,EAAqDC,UAArD,EAAiE;AAC7D,MAAIC,UAAU,GAAGC,QAAQ,CAACC,KAAT,CAAe,IAAf,EAAqBC,SAArB,CAAjB;AAEAR,EAAAA,OAAO,CAACS,gBAAR,CAAyBP,IAAzB,EAA+BG,UAA/B,EAA2CD,UAA3C;AAEA,SAAO;AACHM,IAAAA,OAAO,EAAE,YAAW;AAChBV,MAAAA,OAAO,CAACW,mBAAR,CAA4BT,IAA5B,EAAkCG,UAAlC,EAA8CD,UAA9C;AACH;AAHE,GAAP;AAKH;AAED;;;;;;;;;;;AASA,SAASE,QAAT,CAAkBN,OAAlB,EAA2BC,QAA3B,EAAqCC,IAArC,EAA2CC,QAA3C,EAAqD;AACjD,SAAO,UAASS,CAAT,EAAY;AACfA,IAAAA,CAAC,CAACC,cAAF,GAAmBhB,OAAO,CAACe,CAAC,CAACE,MAAH,EAAWb,QAAX,CAA1B;;AAEA,QAAIW,CAAC,CAACC,cAAN,EAAsB;AAClBV,MAAAA,QAAQ,CAACY,IAAT,CAAcf,OAAd,EAAuBY,CAAvB;AACH;AACJ,GAND;AAOH;;AAEDI,MAAM,CAACC,OAAP,GAAiBlB,QAAjB","sourcesContent":["var closest = require('./closest');\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n"]},"metadata":{},"sourceType":"script"}